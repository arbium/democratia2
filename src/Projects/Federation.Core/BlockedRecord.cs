//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Federation.Core
{
    public partial class BlockedRecord
    {
        #region Primitive Properties
    
        public virtual System.Guid Id
        {
            get;
            set;
        }
    
        public virtual System.DateTime BlockDate
        {
            get;
            set;
        }
    
        public virtual System.DateTime BlockExpireDate
        {
            get;
            set;
        }
    
        public virtual System.Guid AdministratorId
        {
            get { return _administratorId; }
            set
            {
                if (_administratorId != value)
                {
                    if (Administrator != null && Administrator.Id != value)
                    {
                        Administrator = null;
                    }
                    _administratorId = value;
                }
            }
        }
        private System.Guid _administratorId;
    
        public virtual string Reason
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual Administrator Administrator
        {
            get { return _administrator; }
            set
            {
                if (!ReferenceEquals(_administrator, value))
                {
                    var previousValue = _administrator;
                    _administrator = value;
                    FixupAdministrator(previousValue);
                }
            }
        }
        private Administrator _administrator;
    
        public virtual BaseUser BaseUser
        {
            get { return _baseUser; }
            set
            {
                if (!ReferenceEquals(_baseUser, value))
                {
                    var previousValue = _baseUser;
                    _baseUser = value;
                    FixupBaseUser(previousValue);
                }
            }
        }
        private BaseUser _baseUser;

        #endregion

        #region Association Fixup
    
        private void FixupAdministrator(Administrator previousValue)
        {
            if (previousValue != null && previousValue.BlockedRecords.Contains(this))
            {
                previousValue.BlockedRecords.Remove(this);
            }
    
            if (Administrator != null)
            {
                if (!Administrator.BlockedRecords.Contains(this))
                {
                    Administrator.BlockedRecords.Add(this);
                }
                if (AdministratorId != Administrator.Id)
                {
                    AdministratorId = Administrator.Id;
                }
            }
        }
    
        private void FixupBaseUser(BaseUser previousValue)
        {
            if (previousValue != null && ReferenceEquals(previousValue.BlockedUserRecord, this))
            {
                previousValue.BlockedUserRecord = null;
            }
    
            if (BaseUser != null)
            {
                BaseUser.BlockedUserRecord = this;
            }
        }

        #endregion

    }
}
