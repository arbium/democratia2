//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Federation.Core
{
    public partial class Like
    {
        #region Primitive Properties
    
        public virtual System.Guid Id
        {
            get;
            set;
        }
    
        public virtual bool Value
        {
            get;
            set;
        }
    
        public virtual System.Guid UserId
        {
            get { return _userId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_userId != value)
                    {
                        if (User != null && User.Id != value)
                        {
                            User = null;
                        }
                        _userId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _userId;
    
        public virtual Nullable<System.Guid> ContentId
        {
            get { return _contentId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_contentId != value)
                    {
                        if (Content != null && Content.Id != value)
                        {
                            Content = null;
                        }
                        _contentId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _contentId;
    
        public virtual Nullable<System.Guid> AlbumItemId
        {
            get { return _albumItemId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_albumItemId != value)
                    {
                        if (AlbumItem != null && AlbumItem.Id != value)
                        {
                            AlbumItem = null;
                        }
                        _albumItemId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _albumItemId;
    
        public virtual Nullable<System.Guid> CommentId
        {
            get { return _commentId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_commentId != value)
                    {
                        if (Comment != null && Comment.Id != value)
                        {
                            Comment = null;
                        }
                        _commentId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _commentId;

        #endregion

        #region Navigation Properties
    
        public virtual User User
        {
            get { return _user; }
            set
            {
                if (!ReferenceEquals(_user, value))
                {
                    var previousValue = _user;
                    _user = value;
                    FixupUser(previousValue);
                }
            }
        }
        private User _user;
    
        public virtual Content Content
        {
            get { return _content; }
            set
            {
                if (!ReferenceEquals(_content, value))
                {
                    var previousValue = _content;
                    _content = value;
                    FixupContent(previousValue);
                }
            }
        }
        private Content _content;
    
        public virtual AlbumItem AlbumItem
        {
            get { return _albumItem; }
            set
            {
                if (!ReferenceEquals(_albumItem, value))
                {
                    var previousValue = _albumItem;
                    _albumItem = value;
                    FixupAlbumItem(previousValue);
                }
            }
        }
        private AlbumItem _albumItem;
    
        public virtual Comment Comment
        {
            get { return _comment; }
            set
            {
                if (!ReferenceEquals(_comment, value))
                {
                    var previousValue = _comment;
                    _comment = value;
                    FixupComment(previousValue);
                }
            }
        }
        private Comment _comment;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupUser(User previousValue)
        {
            if (previousValue != null && previousValue.Likes.Contains(this))
            {
                previousValue.Likes.Remove(this);
            }
    
            if (User != null)
            {
                if (!User.Likes.Contains(this))
                {
                    User.Likes.Add(this);
                }
                if (UserId != User.Id)
                {
                    UserId = User.Id;
                }
            }
        }
    
        private void FixupContent(Content previousValue)
        {
            if (previousValue != null && previousValue.Likes.Contains(this))
            {
                previousValue.Likes.Remove(this);
            }
    
            if (Content != null)
            {
                if (!Content.Likes.Contains(this))
                {
                    Content.Likes.Add(this);
                }
                if (ContentId != Content.Id)
                {
                    ContentId = Content.Id;
                }
            }
            else if (!_settingFK)
            {
                ContentId = null;
            }
        }
    
        private void FixupAlbumItem(AlbumItem previousValue)
        {
            if (previousValue != null && previousValue.Likes.Contains(this))
            {
                previousValue.Likes.Remove(this);
            }
    
            if (AlbumItem != null)
            {
                if (!AlbumItem.Likes.Contains(this))
                {
                    AlbumItem.Likes.Add(this);
                }
                if (AlbumItemId != AlbumItem.Id)
                {
                    AlbumItemId = AlbumItem.Id;
                }
            }
            else if (!_settingFK)
            {
                AlbumItemId = null;
            }
        }
    
        private void FixupComment(Comment previousValue)
        {
            if (previousValue != null && previousValue.Likes.Contains(this))
            {
                previousValue.Likes.Remove(this);
            }
    
            if (Comment != null)
            {
                if (!Comment.Likes.Contains(this))
                {
                    Comment.Likes.Add(this);
                }
                if (CommentId != Comment.Id)
                {
                    CommentId = Comment.Id;
                }
            }
            else if (!_settingFK)
            {
                CommentId = null;
            }
        }

        #endregion

    }
}
