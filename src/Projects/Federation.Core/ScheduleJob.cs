//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Federation.Core
{
    public partial class ScheduleJob
    {
        #region Primitive Properties
    
        public virtual System.Guid Id
        {
            get;
            set;
        }
    
        public virtual System.DateTime CreationDate
        {
            get;
            set;
        }
    
        public virtual System.DateTime ExecutionDate
        {
            get;
            set;
        }
    
        public virtual byte[] Task
        {
            get;
            set;
        }
    
        public virtual byte State
        {
            get;
            set;
        }
    
        public virtual bool DoRepeat
        {
            get;
            set;
        }
    
        public virtual bool TryRecover
        {
            get;
            set;
        }
    
        public virtual Nullable<int> RepeatPeriod
        {
            get;
            set;
        }
    
        public virtual System.DateTime NextExecutionDate
        {
            get;
            set;
        }
    
        public virtual string Title
        {
            get;
            set;
        }
    
        public virtual string Type
        {
            get;
            set;
        }
    
        public virtual bool IsUnique
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<ScheduleExecutionInfo> ScheduleExecutionInfo
        {
            get
            {
                if (_scheduleExecutionInfo == null)
                {
                    var newCollection = new FixupCollection<ScheduleExecutionInfo>();
                    newCollection.CollectionChanged += FixupScheduleExecutionInfo;
                    _scheduleExecutionInfo = newCollection;
                }
                return _scheduleExecutionInfo;
            }
            set
            {
                if (!ReferenceEquals(_scheduleExecutionInfo, value))
                {
                    var previousValue = _scheduleExecutionInfo as FixupCollection<ScheduleExecutionInfo>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupScheduleExecutionInfo;
                    }
                    _scheduleExecutionInfo = value;
                    var newValue = value as FixupCollection<ScheduleExecutionInfo>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupScheduleExecutionInfo;
                    }
                }
            }
        }
        private ICollection<ScheduleExecutionInfo> _scheduleExecutionInfo;

        #endregion

        #region Association Fixup
    
        private void FixupScheduleExecutionInfo(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ScheduleExecutionInfo item in e.NewItems)
                {
                    item.ScheduleJob = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ScheduleExecutionInfo item in e.OldItems)
                {
                    if (ReferenceEquals(item.ScheduleJob, this))
                    {
                        item.ScheduleJob = null;
                    }
                }
            }
        }

        #endregion

    }
}
