//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Federation.Core
{
    public partial class ScheduleExecutionInfo
    {
        #region Primitive Properties
    
        public virtual System.Guid Id
        {
            get;
            set;
        }
    
        public virtual System.DateTime StartDate
        {
            get;
            set;
        }
    
        public virtual System.DateTime EndDate
        {
            get;
            set;
        }
    
        public virtual string Info
        {
            get;
            set;
        }
    
        public virtual byte State
        {
            get;
            set;
        }
    
        public virtual System.Guid ScheduleJobId
        {
            get { return _scheduleJobId; }
            set
            {
                if (_scheduleJobId != value)
                {
                    if (ScheduleJob != null && ScheduleJob.Id != value)
                    {
                        ScheduleJob = null;
                    }
                    _scheduleJobId = value;
                }
            }
        }
        private System.Guid _scheduleJobId;

        #endregion

        #region Navigation Properties
    
        public virtual ScheduleJob ScheduleJob
        {
            get { return _scheduleJob; }
            set
            {
                if (!ReferenceEquals(_scheduleJob, value))
                {
                    var previousValue = _scheduleJob;
                    _scheduleJob = value;
                    FixupScheduleJob(previousValue);
                }
            }
        }
        private ScheduleJob _scheduleJob;

        #endregion

        #region Association Fixup
    
        private void FixupScheduleJob(ScheduleJob previousValue)
        {
            if (previousValue != null && previousValue.ScheduleExecutionInfo.Contains(this))
            {
                previousValue.ScheduleExecutionInfo.Remove(this);
            }
    
            if (ScheduleJob != null)
            {
                if (!ScheduleJob.ScheduleExecutionInfo.Contains(this))
                {
                    ScheduleJob.ScheduleExecutionInfo.Add(this);
                }
                if (ScheduleJobId != ScheduleJob.Id)
                {
                    ScheduleJobId = ScheduleJob.Id;
                }
            }
        }

        #endregion

    }
}
