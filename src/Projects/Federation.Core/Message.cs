//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Federation.Core
{
    public partial class Message
    {
        #region Primitive Properties
    
        public virtual System.Guid Id
        {
            get;
            set;
        }
    
        public virtual string Text
        {
            get;
            set;
        }
    
        public virtual System.DateTime Date
        {
            get;
            set;
        }
    
        public virtual Nullable<System.Guid> AuthorId
        {
            get { return _authorId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_authorId != value)
                    {
                        if (Author != null && Author.Id != value)
                        {
                            Author = null;
                        }
                        _authorId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _authorId;
    
        public virtual System.Guid RecipientId
        {
            get { return _recipientId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_recipientId != value)
                    {
                        if (Recipient != null && Recipient.Id != value)
                        {
                            Recipient = null;
                        }
                        _recipientId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _recipientId;
    
        public virtual bool IsRead
        {
            get;
            set;
        }
    
        public virtual byte Type
        {
            get;
            set;
        }
    
        public virtual bool IsDeletedByRecipient
        {
            get;
            set;
        }
    
        public virtual bool IsDeletedByAuthor
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual BaseUser Author
        {
            get { return _author; }
            set
            {
                if (!ReferenceEquals(_author, value))
                {
                    var previousValue = _author;
                    _author = value;
                    FixupAuthor(previousValue);
                }
            }
        }
        private BaseUser _author;
    
        public virtual BaseUser Recipient
        {
            get { return _recipient; }
            set
            {
                if (!ReferenceEquals(_recipient, value))
                {
                    var previousValue = _recipient;
                    _recipient = value;
                    FixupRecipient(previousValue);
                }
            }
        }
        private BaseUser _recipient;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupAuthor(BaseUser previousValue)
        {
            if (previousValue != null && previousValue.OutboxMessages.Contains(this))
            {
                previousValue.OutboxMessages.Remove(this);
            }
    
            if (Author != null)
            {
                if (!Author.OutboxMessages.Contains(this))
                {
                    Author.OutboxMessages.Add(this);
                }
                if (AuthorId != Author.Id)
                {
                    AuthorId = Author.Id;
                }
            }
            else if (!_settingFK)
            {
                AuthorId = null;
            }
        }
    
        private void FixupRecipient(BaseUser previousValue)
        {
            if (previousValue != null && previousValue.InboxMessages.Contains(this))
            {
                previousValue.InboxMessages.Remove(this);
            }
    
            if (Recipient != null)
            {
                if (!Recipient.InboxMessages.Contains(this))
                {
                    Recipient.InboxMessages.Add(this);
                }
                if (RecipientId != Recipient.Id)
                {
                    RecipientId = Recipient.Id;
                }
            }
        }

        #endregion

    }
}
