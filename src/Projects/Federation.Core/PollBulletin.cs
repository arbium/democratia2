//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Federation.Core
{
    public partial class PollBulletin : Bulletin
    {
        #region Primitive Properties
    
        public virtual byte Result
        {
            get { return _result; }
            set { _result = value; }
        }
        private byte _result = 0;
    
        public virtual int Weight
        {
            get;
            set;
        }
    
        public virtual string Comment
        {
            get;
            set;
        }
    
        public virtual System.Guid PollId
        {
            get { return _pollId; }
            set
            {
                if (_pollId != value)
                {
                    if (Poll != null && Poll.Id != value)
                    {
                        Poll = null;
                    }
                    _pollId = value;
                }
            }
        }
        private System.Guid _pollId;

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<PollBulletin> ExpertBulletins
        {
            get
            {
                if (_expertBulletins == null)
                {
                    var newCollection = new FixupCollection<PollBulletin>();
                    newCollection.CollectionChanged += FixupExpertBulletins;
                    _expertBulletins = newCollection;
                }
                return _expertBulletins;
            }
            set
            {
                if (!ReferenceEquals(_expertBulletins, value))
                {
                    var previousValue = _expertBulletins as FixupCollection<PollBulletin>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupExpertBulletins;
                    }
                    _expertBulletins = value;
                    var newValue = value as FixupCollection<PollBulletin>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupExpertBulletins;
                    }
                }
            }
        }
        private ICollection<PollBulletin> _expertBulletins;
    
        public virtual ICollection<PollBulletin> GrantorBulletins
        {
            get
            {
                if (_grantorBulletins == null)
                {
                    var newCollection = new FixupCollection<PollBulletin>();
                    newCollection.CollectionChanged += FixupGrantorBulletins;
                    _grantorBulletins = newCollection;
                }
                return _grantorBulletins;
            }
            set
            {
                if (!ReferenceEquals(_grantorBulletins, value))
                {
                    var previousValue = _grantorBulletins as FixupCollection<PollBulletin>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGrantorBulletins;
                    }
                    _grantorBulletins = value;
                    var newValue = value as FixupCollection<PollBulletin>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGrantorBulletins;
                    }
                }
            }
        }
        private ICollection<PollBulletin> _grantorBulletins;
    
        public virtual Poll Poll
        {
            get { return _poll; }
            set
            {
                if (!ReferenceEquals(_poll, value))
                {
                    var previousValue = _poll;
                    _poll = value;
                    FixupPoll(previousValue);
                }
            }
        }
        private Poll _poll;

        #endregion

        #region Association Fixup
    
        private void FixupPoll(Poll previousValue)
        {
            if (previousValue != null && previousValue.Bulletins.Contains(this))
            {
                previousValue.Bulletins.Remove(this);
            }
    
            if (Poll != null)
            {
                if (!Poll.Bulletins.Contains(this))
                {
                    Poll.Bulletins.Add(this);
                }
                if (PollId != Poll.Id)
                {
                    PollId = Poll.Id;
                }
            }
        }
    
        private void FixupExpertBulletins(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PollBulletin item in e.NewItems)
                {
                    if (!item.GrantorBulletins.Contains(this))
                    {
                        item.GrantorBulletins.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PollBulletin item in e.OldItems)
                {
                    if (item.GrantorBulletins.Contains(this))
                    {
                        item.GrantorBulletins.Remove(this);
                    }
                }
            }
        }
    
        private void FixupGrantorBulletins(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PollBulletin item in e.NewItems)
                {
                    if (!item.ExpertBulletins.Contains(this))
                    {
                        item.ExpertBulletins.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PollBulletin item in e.OldItems)
                {
                    if (item.ExpertBulletins.Contains(this))
                    {
                        item.ExpertBulletins.Remove(this);
                    }
                }
            }
        }

        #endregion

    }
}
