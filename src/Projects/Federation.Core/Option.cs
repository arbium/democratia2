//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Federation.Core
{
    public partial class Option
    {
        #region Primitive Properties
    
        public virtual System.Guid Id
        {
            get;
            set;
        }
    
        public virtual System.Guid SurveyId
        {
            get { return _surveyId; }
            set
            {
                if (_surveyId != value)
                {
                    if (Survey != null && Survey.Id != value)
                    {
                        Survey = null;
                    }
                    _surveyId = value;
                }
            }
        }
        private System.Guid _surveyId;
    
        public virtual string Title
        {
            get;
            set;
        }
    
        public virtual string Description
        {
            get;
            set;
        }
    
        public virtual byte Position
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual Survey Survey
        {
            get { return _survey; }
            set
            {
                if (!ReferenceEquals(_survey, value))
                {
                    var previousValue = _survey;
                    _survey = value;
                    FixupSurvey(previousValue);
                }
            }
        }
        private Survey _survey;
    
        public virtual ICollection<SurveyBulletin> SurveyBulletins
        {
            get
            {
                if (_surveyBulletins == null)
                {
                    var newCollection = new FixupCollection<SurveyBulletin>();
                    newCollection.CollectionChanged += FixupSurveyBulletins;
                    _surveyBulletins = newCollection;
                }
                return _surveyBulletins;
            }
            set
            {
                if (!ReferenceEquals(_surveyBulletins, value))
                {
                    var previousValue = _surveyBulletins as FixupCollection<SurveyBulletin>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSurveyBulletins;
                    }
                    _surveyBulletins = value;
                    var newValue = value as FixupCollection<SurveyBulletin>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSurveyBulletins;
                    }
                }
            }
        }
        private ICollection<SurveyBulletin> _surveyBulletins;

        #endregion

        #region Association Fixup
    
        private void FixupSurvey(Survey previousValue)
        {
            if (previousValue != null && previousValue.Options.Contains(this))
            {
                previousValue.Options.Remove(this);
            }
    
            if (Survey != null)
            {
                if (!Survey.Options.Contains(this))
                {
                    Survey.Options.Add(this);
                }
                if (SurveyId != Survey.Id)
                {
                    SurveyId = Survey.Id;
                }
            }
        }
    
        private void FixupSurveyBulletins(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SurveyBulletin item in e.NewItems)
                {
                    if (!item.Result.Contains(this))
                    {
                        item.Result.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SurveyBulletin item in e.OldItems)
                {
                    if (item.Result.Contains(this))
                    {
                        item.Result.Remove(this);
                    }
                }
            }
        }

        #endregion

    }
}
