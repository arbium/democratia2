@using Federation.Core
@using Federation.Web.ViewModels
@model UserDialogViewModel
@{
    ViewBag.Title = "Диалог";
}

<script src="../../Resources/jScrollPane/jquery.jscrollpane.min.js" type="text/javascript"></script>
<link href="../../Resources/jScrollPane/jquery.jscrollpane.css" rel="stylesheet" type="text/css" />
<script src="../../Resources/jScrollPane/jquery.mousewheel.js" type="text/javascript"></script>
<script src="../../Resources/jScrollPane/mwheelIntent.js" type="text/javascript"></script>

<link href="../../Resources/themes/base/dialog.css" rel="stylesheet" type="text/css" />
<!--[if IE]>
<link href="../../Resources/themes/base/dialog_ie.css" rel="stylesheet" type="text/css" />
<![endif]-->

<script type="text/javascript">
    var lastUpdateTime, utcOffset, spApi, contentPane, title;

    function appendMsg(data) {
        if ($("#" + data.Id).length == 0) {
            var msgClass = "unread msg ";

            if (data.IsInbox)
                msgClass += "inbox";
            else
                msgClass += "outbox";

            var html =
                "<div class='container'>" +
                    "<div id='" + data.Id + "' class='" + msgClass + "'>" +
                        "<div class='info'>" +
                            "<span class='date'>" + data.Date + "</span>" +
                            "<span class='delete'>удалить</span>" +
                        "</div>" +
                        "<p class='text'>";

            for (var i = 0; i < data.Text.length; i++)
                html += data.Text[i] + "<br />";

            html +=
                        "</p>" +
                    "</div>" +
                "</div>";

            contentPane.append(html);
            
            $("#" + data.Id + " .delete").click(function() {
                deleteMsg(this);
            });

            return true;
        }

        return false;
    }
    
    function deleteMsg(sender) {
        if (confirm("Вы уверены?")) {
            var message = $(sender).closest(".msg");

            $.ajax({
                url: "@Url.Action("deletemessage")",
                data: { id: message.attr("id") },
                success: function () {
                    message.remove();
                    spApi.reinitialise();
                }
            });
        }
    }
    
    function update() {
        $.ajax({
            url: "@Url.Action("getnewmessages")",
            data: { after: lastUpdateTime.toUTCString(), utcOffset: utcOffset, contactId: "@Model.ContactId" },
            success: function (data) {
                if (data) {                    
                    var success;
                    for (var i = 0; i < data.length; i++)
                        if (appendMsg(data[i], spApi))
                            success = true;
                    
                    if (success) {
                        $(".outbox.unread").each(function() {
                            $(this).removeClass("unread");
                        });
                        
                        spApi.reinitialise();
                        spApi.scrollTo(0, 9999999);
                    }

                    lastUpdateTime = new Date();
                }

                var unread = $(".inbox.unread").length;                
                if (unread)
                    document.title = "(" + unread + ") " + title;
                else
                    document.title = title;
            }
        });
    }

    $(function () {        
        $("#dialog").css("height", $(window).height() * 0.55);
        $("#dialog").jScrollPane({ animateScroll: true });
        
        title = document.title;
        
        spApi = $("#dialog").data("jsp");
        spApi.scrollTo(0, 9999999);
        contentPane = spApi.getContentPane();

        lastUpdateTime = new Date();
        utcOffset = -lastUpdateTime.getTimezoneOffset();                
        
        var autoUpdate;
        var slowUpdate;
        $(window).hover(function(event) {
            if (!event.fromElement && !autoUpdate)
                $(window).trigger("focus");
        });
        $(window).focus(function() {
            update();
            
            if (slowUpdate) {
                clearInterval(slowUpdate);
                slowUpdate = 0;
            }            
            if (!autoUpdate) {
                clearInterval(autoUpdate);
                autoUpdate = setInterval(update, 5000);
            }
        });
        $(window).blur(function() {
            if (autoUpdate) {
                clearInterval(autoUpdate);
                autoUpdate = 0;
            }            
            if (!slowUpdate) {
                clearInterval(slowUpdate);
                slowUpdate = setInterval(update, 300000);                
            }
        });

        $(".msg .delete").click(function() {
            deleteMsg(this);
        });

        $(".new.msg form").submit(function() {
            return false;
        });
        
        $(".new.msg .send").click(function () {
            var textarea = $(this).parent().children("textarea");
            var text = textarea.val();
            textarea.val("");
            
            $.ajax({
                url: "@Url.Action("dialog")",
                type: "POST",
                data: { contactId: "@Model.ContactId", text: text, ajax: true },
                success: function (data) {
                    if (data) {
                        $(".inbox.unread.msg").each(function() {
                            $(this).removeClass("unread");
                        });

                        if (appendMsg(data, spApi)) {
                            spApi.reinitialise();
                            spApi.scrollTo(0, 9999999);
                        }
                    }
                }
            });
        });

        $(".new.msg textarea").keydown(function(e) {
            if (e.ctrlKey && e.keyCode == 13)
                $(".new.msg .send").trigger("click");
        });
    });
</script>

<div class="layout_pageheader"></div>
<div class="layout_sidemenu">
    @Html.Partial("_NavigationBox", new _NavigationBoxViewModel(UserContext.Current.Id, NavigationBoxType.User))
</div>
<div class="layout_content">
    <div class="lighttabs_container">
        <ul class="lighttabs">
            <li>
                @if (Request.UrlReferrer == null)
                {
                    <a href="@Url.Action("dialogs")">◄</a>
                }
                else
                {
                    <a class="back">◄</a>
                }
            </li>
            <li>
                <a class="selected">@ViewBag.Title</a>
            </li>
        </ul>
        <div class="lighttabs_border"></div>
    </div>
    <div class="body">
        <div class="bottom smooth-transition">
            @if (Model.ContactId.HasValue)
            {
                <a class="contact" href="@Url.Action("index", new { id = Model.ContactId })">
                    <img class="avatar" src="@Model.ContactAvatar&w=15&h=20" alt="" />
                    <span class="name">@Model.ContactName</span>
                </a>
            }
            else
            {
                <span class="contact">
                    <img class="avatar logo" src="/favicon.ico" alt="" />
                    <span class="name">Система</span>
                </span>
            }
        </div>
        <div id="dialog">            
            @foreach (var message in Model.Messages)
            {                
                <div class="container">                    
                    <div id="@message.Id" class="@(message.IsInbox ? "inbox" : "outbox") @(!message.IsRead ? "unread" : string.Empty) msg">                        
                        <span class="info">
                            <span class="date">@message.Date</span>
                            <span class="delete">удалить</span>
                        </span>
                        <p class="text">
                            @if (message.Type == MessageType.PrivateMessage)
                            {
                                foreach (var line in message.Text)
                                {
                                    <text>@TextHelper.CleanTags(line, false, true)</text><br />
                                }
                            }
                            else
                            {
                                @Html.Raw(message.Html)
                            }
                        </p>
                    </div>
                </div>
            }
            <div id="scroll-bottom"></div>
        </div>
        <div class="top smooth-transition">
            @if (Model.ContactId.HasValue)
            {
                <div id="send-message" class="new outbox msg">
                    @using (Html.BeginForm())
                    {
                        @Html.HiddenFor(x => x.ContactId)
                        @Html.ValidationMessageFor(x => x.Text)
                        @Html.TextAreaFor(x => x.Text, 5, 99, new { placeholder = "Текст сообщения" })
                        <span class="hint">Горячие клавиши: Ctrl+Enter</span>
                        <input type="submit" class="send" value="Отправить" />
                    }
                </div>
            }
        </div>
    </div>
</div>